<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>workflow on CDS - Continuous Delivery Service</title>
    <link>/docs/components/cdsctl/workflow/</link>
    <description>Recent content in workflow on CDS - Continuous Delivery Service</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="/docs/components/cdsctl/workflow/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>applyTemplate</title>
      <link>/docs/components/cdsctl/workflow/applytemplate/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/components/cdsctl/workflow/applytemplate/</guid>
      <description>cdsctl workflow applyTemplate Apply CDS workflow template
Synopsis Apply CDS workflow template
cdsctl workflow applyTemplate [ PROJECT-KEY WORKFLOW-NAME ] [TEMPLATE-PATH] [flags] Examples cdsctl template apply project-key workflow-name group-name/template-slug Options  --detach Set to generate a workflow detached from the template --force Force, may override files --import-as-code If true, will import the generated workflow as code on given project --import-push If true, will push the generated workflow on given project -d, --output-dir string Output directory (default &amp;quot;.</description>
    </item>
    
    <item>
      <title>ascode</title>
      <link>/docs/components/cdsctl/workflow/ascode/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/components/cdsctl/workflow/ascode/</guid>
      <description>cdsctl workflow ascode Transform an existing workflow to an as code workflow
Synopsis Transform an existing workflow to an as code workflow
cdsctl workflow ascode [ PROJECT-KEY WORKFLOW-NAME ] [flags] Options  --branch string --fields string Only display specified object fields. &#39;empty&#39; will display all fields, &#39;all&#39; will display all object fields, &#39;field1,field2&#39; to select multiple fields --format string Output format: plain|json|yaml (default &amp;quot;plain&amp;quot;) --message string -q, --quiet Only display object&#39;s key --silent --verbose Display all object fields Options inherited from parent commands  -c, --context string cdsctl context name -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers.</description>
    </item>
    
    <item>
      <title>export</title>
      <link>/docs/components/cdsctl/workflow/export/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/components/cdsctl/workflow/export/</guid>
      <description>cdsctl workflow export Export a workflow
Synopsis Export a workflow
cdsctl workflow export [ PROJECT-KEY WORKFLOW-NAME ] [flags] Options  --format string Specify export format (json or yaml) (default &amp;quot;yaml&amp;quot;) --with-permissions Export permissions Options inherited from parent commands  -c, --context string cdsctl context name -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers. -n, --no-interactive Set to disable interaction with ctl --verbose Enable verbose output SEE ALSO  cdsctl workflow	- Manage CDS workflow  </description>
    </item>
    
    <item>
      <title>favorite</title>
      <link>/docs/components/cdsctl/workflow/favorite/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/components/cdsctl/workflow/favorite/</guid>
      <description>cdsctl workflow favorite Add or delete a CDS workflow to your personal bookmarks
Synopsis Add or delete a CDS workflow to your personal bookmarks
cdsctl workflow favorite [ PROJECT-KEY WORKFLOW-NAME ] Options inherited from parent commands  -c, --context string cdsctl context name -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers. -n, --no-interactive Set to disable interaction with ctl --verbose Enable verbose output SEE ALSO  cdsctl workflow	- Manage CDS workflow  </description>
    </item>
    
    <item>
      <title>history</title>
      <link>/docs/components/cdsctl/workflow/history/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/components/cdsctl/workflow/history/</guid>
      <description>cdsctl workflow history Display CDS workflow runs history
Synopsis Display CDS workflow runs history
cdsctl workflow history [ PROJECT-KEY WORKFLOW-NAME ] [OFFSET] [LIMIT] [flags] Options  --fields string Only display specified object fields. &#39;empty&#39; will display all fields, &#39;all&#39; will display all object fields, &#39;field1,field2&#39; to select multiple fields --filter string Filter output based on conditions provided --format string Output format: table|json|yaml (default &amp;quot;table&amp;quot;) -q, --quiet Only display object&#39;s key --verbose Display all object fields Options inherited from parent commands  -c, --context string cdsctl context name -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers.</description>
    </item>
    
    <item>
      <title>import</title>
      <link>/docs/components/cdsctl/workflow/import/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/components/cdsctl/workflow/import/</guid>
      <description>cdsctl workflow import Import a workflow
Synopsis In case you want to import just your workflow. Instead of use a local file you can also use an URL to your yaml file.
If you want to update also dependencies likes pipelines, applications or environments at same time you have to use workflow push instead workflow import.
Without &amp;ndash;force, CDS won&amp;rsquo;t update an existing workflow. With &amp;ndash;force, CDS will allow you to update an existing workflow.</description>
    </item>
    
    <item>
      <title>init</title>
      <link>/docs/components/cdsctl/workflow/init/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/components/cdsctl/workflow/init/</guid>
      <description>cdsctl workflow init Init a workflow
Synopsis Initialize a workflow from your current repository, this will read or create yml files and push them to CDS.
Documentation: https://ovh.github.io/cds/docs/tutorials/init_workflow_with_cdsctl/
cdsctl workflow init [PROJECT-KEY] [flags] Options  --application string (Optional) Set the application name. If empty, it will deduce application name from the repository. --pipeline string (Optional) Set the root pipeline you want to use. If empty it will propose you to reuse of create a pipeline.</description>
    </item>
    
    <item>
      <title>list</title>
      <link>/docs/components/cdsctl/workflow/list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/components/cdsctl/workflow/list/</guid>
      <description>cdsctl workflow list List CDS workflows
Synopsis List CDS workflows
cdsctl workflow list [ PROJECT-KEY ] [flags] Options  --fields string Only display specified object fields. &#39;empty&#39; will display all fields, &#39;all&#39; will display all object fields, &#39;field1,field2&#39; to select multiple fields --filter string Filter output based on conditions provided --format string Output format: table|json|yaml (default &amp;quot;table&amp;quot;) -q, --quiet Only display object&#39;s key --verbose Display all object fields Options inherited from parent commands  -c, --context string cdsctl context name -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers.</description>
    </item>
    
    <item>
      <title>pull</title>
      <link>/docs/components/cdsctl/workflow/pull/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/components/cdsctl/workflow/pull/</guid>
      <description>cdsctl workflow pull Pull a workflow
Synopsis Pull a workflow
cdsctl workflow pull [ PROJECT-KEY WORKFLOW-NAME ] [flags] Options  --force Force, may override files -d, --output-dir string Output directory (default &amp;quot;.cds&amp;quot;) --quiet If true, do not output filename created --with-permissions Export permissions Options inherited from parent commands  -c, --context string cdsctl context name -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers.</description>
    </item>
    
    <item>
      <title>push</title>
      <link>/docs/components/cdsctl/workflow/push/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/components/cdsctl/workflow/push/</guid>
      <description>cdsctl workflow push Push a workflow
Synopsis Useful when you want to push a workflow and his dependencies (pipelines, applications, environments)
For example if you have a workflow with pipelines build and tests you can push your workflow and pipelines with
cdsctl workflow push tests.pip.yml build.pip.yml myWorkflow.yml  cdsctl workflow push [ PROJECT-KEY ] YAML-FILE ... [flags] Options  --force Override workflow if exists --skip-update-files Useful if you don&#39;t want to update yaml files after pushing the workflow.</description>
    </item>
    
    <item>
      <title>run</title>
      <link>/docs/components/cdsctl/workflow/run/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/components/cdsctl/workflow/run/</guid>
      <description>cdsctl workflow run Run a CDS workflow
Synopsis Run a CDS workflow
cdsctl workflow run [ PROJECT-KEY WORKFLOW-NAME ] [flags] Options  -d, --data string Run the workflow with payload data -i, --interactive Follow the workflow run in an interactive terminal user interface --node-name string Node Name to launch; Flag run-number is mandatory -o, --open-web-browser Open web browser on the workflow run -p, --parameter strings Run the workflow with pipeline parameter --run-number string Existing Workflow RUN Number -s, --sync Synchronise your pipelines with your last editions.</description>
    </item>
    
    <item>
      <title>run-delete</title>
      <link>/docs/components/cdsctl/workflow/run-delete/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/components/cdsctl/workflow/run-delete/</guid>
      <description>cdsctl workflow run-delete Delete a workflow run
Synopsis Delete a workflow run
cdsctl workflow run-delete [ PROJECT-KEY WORKFLOW-NAME ] RUN-NUMBER ... [flags] Options  --force Force delete without confirmation and exit 0 if resource does not exist Options inherited from parent commands  -c, --context string cdsctl context name -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers. -n, --no-interactive Set to disable interaction with ctl --verbose Enable verbose output SEE ALSO  cdsctl workflow	- Manage CDS workflow  </description>
    </item>
    
    <item>
      <title>show</title>
      <link>/docs/components/cdsctl/workflow/show/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/components/cdsctl/workflow/show/</guid>
      <description>cdsctl workflow show Show a CDS workflow
Synopsis Show a CDS workflow
cdsctl workflow show [ PROJECT-KEY WORKFLOW-NAME ] [flags] Options  --fields string Only display specified object fields. &#39;empty&#39; will display all fields, &#39;all&#39; will display all object fields, &#39;field1,field2&#39; to select multiple fields --format string Output format: plain|json|yaml (default &amp;quot;plain&amp;quot;) -q, --quiet Only display object&#39;s key --verbose Display all object fields Options inherited from parent commands  -c, --context string cdsctl context name -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers.</description>
    </item>
    
    <item>
      <title>status</title>
      <link>/docs/components/cdsctl/workflow/status/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/components/cdsctl/workflow/status/</guid>
      <description>cdsctl workflow status Check the status of the run
Synopsis Check the status of the run
cdsctl workflow status [ PROJECT-KEY WORKFLOW-NAME ] [RUN-NUMBER] [flags] Options  --commit string Specify the git commit of the run you want --fields string Only display specified object fields. &#39;empty&#39; will display all fields, &#39;all&#39; will display all object fields, &#39;field1,field2&#39; to select multiple fields --format string Output format: plain|json|yaml (default &amp;quot;plain&amp;quot;) -q, --quiet Only display object&#39;s key --track Wait the workflow to be over --verbose Display all object fields Options inherited from parent commands  -c, --context string cdsctl context name -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers.</description>
    </item>
    
    <item>
      <title>stop</title>
      <link>/docs/components/cdsctl/workflow/stop/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/components/cdsctl/workflow/stop/</guid>
      <description>cdsctl workflow stop Stop a CDS workflow or a specific node name
Synopsis Stop a CDS workflow or a specific node name
cdsctl workflow stop [ PROJECT-KEY WORKFLOW-NAME ] [RUN-NUMBER] [NODE-NAME] Examples cdsctl workflow stop # Stop the workflow run for the current repo and the current hash cdsctl workflow stop MYPROJECT myworkflow 5 # To stop a workflow run on number 5 cdsctl workflow stop MYPROJECT myworkflow 5 compile # To stop a workflow node run on workflow run 5 Options inherited from parent commands  -c, --context string cdsctl context name -f, --file string set configuration file --insecure (SSL) This option explicitly allows curl to perform &amp;quot;insecure&amp;quot; SSL connections and transfers.</description>
    </item>
    
  </channel>
</rss>
